class Solution {
public:
    bool wordBreak(string& s,int cur,unordered_set<string>& st,vector<int>& rec)
    {
        if(cur==s.size()) return true;
        if(rec[cur]==1) return true;
        if(rec[cur]==-1) return false;
        for(int i=cur;i<s.size();++i)
        {
            if(st.find(s.substr(cur,i-cur+1))!=st.end()&&wordBreak(s,i+1,st,rec))
            {
                rec[i]=1;
                return true;
            }
        }
        rec[cur]=-1;
        return false;
    }
    bool wordBreak(string s, vector<string>& wordDict) {
        unordered_set<string> st(wordDict.begin(),wordDict.end());
        vector<int> rec(s.size(),0);//记录以i为起始点后的部分可以被拆分
        return wordBreak(s,0,st,rec);
    }
};
