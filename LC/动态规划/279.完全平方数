//给定正整数 n，找到若干个完全平方数（比如 1, 4, 9, 16, ...）使得它们的和等于 n。你需要让组成和的完全平方数的个数最少
//输入: n = 12
//输出: 3 
//解释: 12 = 4 + 4 + 4.
class Solution {
public:
    int numSquares(int n) {
        if(n<=0) return 0;
        vector<int> dp(n+1,0);//和等于n的最少平方数的个数
        for(int i=1;i<=n;++i)
        {
            dp[i]=i;//最多的情况 全是1^2
            for(int j=1;j*j<=i;++j)
            {
                dp[i]=min(dp[i],dp[i-j*j]+1);
            }
        }
        return dp[n];
    }
};
